{"version":3,"sources":["controllers/retrieveFontFileUrl.js"],"names":["retrieveFontFileUrl","name","files","varient","hasOwnProperty","Object","keys","url","substr","axios","request","method","responseType","then","data","fontFile","File","URL","createObjectURL"],"mappings":"4FAAA,oEAEe,SAASA,EAAoBC,EAAMC,GAC9C,IAAMC,EAAUD,EAAME,eAAe,WAAa,UAAYF,EAAME,eAAe,OAAS,MAAQC,OAAOC,KAAKJ,GAAO,GACnHK,EAAML,EAAMC,GAGhB,OADAI,EAAM,QAAQA,EAAIC,OAAO,GAClBC,IAAMC,QAAQ,CAACH,MAAKI,OAFZ,MAEoBC,aAAc,SAChDC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACCC,EAAW,IAAIC,KAAK,CAACF,GAAOb,EAAK,QACvC,OAAOgB,IAAIC,gBAAgBH","file":"static/js/1.e82a39b5.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default function retrieveFontFileUrl(name, files) {\n    const varient = files.hasOwnProperty('regular') ? 'regular' : files.hasOwnProperty('400') ? '400' : Object.keys(files)[0]; // fallbacks\n    let url = files[varient]; \n    const method = 'GET';\n    url = 'https'+url.substr(4); // hack to replace http request\n    return axios.request({url, method, responseType: 'blob'})\n    .then(({ data }) => {\n        const fontFile = new File([data], name+'.ttf');\n        return URL.createObjectURL(fontFile);\n    });\n}"],"sourceRoot":""}